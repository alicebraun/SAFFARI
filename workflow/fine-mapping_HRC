from snakemake.io import expand
from numpy import expand_dims
import pandas as pd

SS = ["daner_bip_pgc3"]  
CHR = list(range(1,23))

LD_UKB_ranges= pd.read_table("resources/daner_bip_pgc3_loci_ranges.tsv", sep='\t', dtype=str).set_index("SNP", drop=False)
SNP = list(LD_UKB_ranges.index)

rule all:
 	input:
 	 	expand("output/{ss}_neff.munged.parquet", ss = SS),
 	 	expand("output/{ss}/priors/{ss}_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", chr = CHR, ss = SS),
 	 	expand("output/{ss}/priors/{ss}_l2-ldsc.{chr}.snpvar_ridge.gz", chr = CHR, ss = SS),
 		expand("output/polyfun_susie_HRC_finemap/{ss}_finemap.{snp}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist()),
 		expand("output/polyfun_susie_HRC_finemap/{ss}_polyfun_susie_all.txt.gz", ss = SS),
		expand("output/polyfun_finemap_HRC_finemap/{ss}_finemap_finemap.{snp}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist()),
		expand("output/polyfun_finemap_HRC_finemap/{ss}_polyfun_finemap_all.txt.gz", ss = SS),
		expand("output/only_finemap_HRC_finemap/{ss}_only_finemap.{snp}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist()),
		expand("output/only_finemap_HRC_finemap/{ss}_only_finemap_all.txt.gz", ss = SS),
		expand("output/only_susie_HRC_finemap/{ss}_only_susie.{snp}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist()),
		expand("output/only_susie_HRC_finemap/{ss}_only_susie_all.txt.gz", ss = SS)

##no need to run the first two rules if you have already run the other Snakefile.if not; then uncomment
#rule munge_polyfun:
      	#input:  "resources/{ss}.gz" 
      	#output: "output/{ss}_neff.munged.parquet"
      	#conda: "envs/polyfun.yml"
      	#resources: mem_mb= 20000
      	#shell:
      		#"""
      		#python polyfun/munge_polyfun_sumstats.py \
      		#--sumstats {input} \
      		#--out {output} \
      		#--min-info 0.6 \
      		#--min-maf 0
      		#"""

#rule l2reg_sldsc: 
      	#input: 
      		#gwas = expand("output/{{ss}}_neff.munged.parquet", ss = SS)
      	#output: 
      		#output1 = expand("output/{{ss}}/priors/{{ss}}_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", ss = SS, chr = CHR),
      		#output2 = expand("output/{{ss}}/priors/{{ss}}_l2-ldsc.{chr}.snpvar_ridge.gz", ss = SS, chr = CHR) 
      	#params:
      		#weights = "/weights.UKB.",
      		#ldscores = "/baselineLF2.2.UKB.",
      		#prefix = expand("output/{{ss}}/priors/{{ss}}_l2-ldsc", ss = SS)
      	#conda: "envs/polyfun.yml"
        #resources: mem_mb = 170000
      	#shell:
      		#"""
      		#python polyfun/polyfun.py \
          		#--compute-h2-L2 \
          		#--no-partitions \
          		#--output-prefix {params.prefix} \
          		#--sumstats {input.gwas} \
  	   			#--allow-missing \
          		#--ref-ld-chr /sc/arion/projects/ad-omics/ashvin/finemapping/UKBB_priors/hg19_baselineLF2.2.UKB{params.ldscores} \
      			#--w-ld-chr /sc/arion/projects/ad-omics/ashvin/finemapping/UKBB_priors/hg19_baselineLF2.2.UKB{params.weights}
      		#"""

rule run_polyfun_susie:
 	input:
 	    snpvar = expand("output/{ss}/priors/{ss}_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", ss = SS, chr = CHR)
 	output:
 		output = expand("output/polyfun_susie_HRC_finemap/{{ss}}_finemap.{{snp}}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist())
 	params:
 	 	chrom = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['CHR'],
 		pos = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['BP'],
 		start = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.left'],
 		end = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.right']
 	conda: "envs/polyfun.yml"
	resources: mem_mb= 32000
 	shell: 
 		"""
 		python polyfun/finemapper.py \
 		--geno /sc/arion/projects/psychgen/resources/genotype_ref_panel/HRC_fromBroad/chr1_22c/pop_EUR/HRC.r1-1.EGA.GRCh37.chr{params.chrom}.impute.plink.EUR \
 		--sumstats output/{wildcards.ss}/priors/{wildcards.ss}_l2-ldsc.{params.chrom}.snpvar_ridge_constrained.gz \
 		--n 101962 \
 		--chr {params.chrom} \
 		--start {params.start} \
 		--end {params.end} \
 		--method susie \
 		--max-num-causal 5 \
 		--out {output.output} \
 		--allow-missing
		"""

rule merge_finemapping_jobs_polysusie:
 	input: expand("output/polyfun_susie_HRC_finemap/{{ss}}_finemap.{snp}.gz", snp = LD_UKB_ranges.index.tolist())
 	output: "output/polyfun_susie_HRC_finemap/{ss}_polyfun_susie_all.txt.gz"
 	conda: "envs/polyfun.yml"
	resources: mem_mb = 8000
	shell:  "cat {input} >> {output}"


rule run_polyfun_finemap:
  	input:
  	    snpvar = expand("output/{ss}/priors/{ss}_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", ss = SS, chr = CHR)
  	output:
  		output = expand("output/polyfun_finemap_HRC_finemap/{{ss}}_finemap_finemap.{{snp}}.gz", snp = LD_UKB_ranges.index.tolist())
  	params:
  	 	chrom = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['CHR'],
  		pos = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['BP'],
  		start = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.left'],
  		end = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.right']
  	conda: "envs/polyfun.yml"
	resources: mem_mb= 32000
  	shell: 
  		"""
  		python polyfun/finemapper.py \
  		--geno /sc/arion/projects/psychgen/resources/genotype_ref_panel/HRC_fromBroad/chr1_22c/pop_EUR/HRC.r1-1.EGA.GRCh37.chr{params.chrom}.impute.plink.EUR \
  		--sumstats output/{wildcards.ss}/priors/{wildcards.ss}_l2-ldsc.{params.chrom}.snpvar_ridge_constrained.gz \
  		--n 101962 \
  		--chr {params.chrom} \
  		--start {params.start} \
  		--end {params.end} \
  		--method finemap \
 		--finemap-exe /hpc/packages/minerva-centos7/finemap/1.4/finemap_v1.4_x86_64/finemap_v1.4_x86_64 \
  		--max-num-causal 5 \
  		--out {output.output} \
  		--allow-missing
 		"""

rule merge_finemapping_jobs_polyfinemap:
 	input: expand("output/polyfun_finemap_HRC_finemap/{{ss}}_finemap_finemap.{snp}.gz", snp = LD_UKB_ranges.index.tolist())
 	output: "output/polyfun_finemap_HRC_finemap/{ss}_polyfun_finemap_all.txt.gz"
	conda: "envs/polyfun.yml"
	resources: mem_mb = 8000
 	shell:  "cat {input} >> {output}"


rule run_only_finemap:
 	input:
 	    snpvar = expand("output/{ss}/priors/{ss}_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", ss = SS, chr = CHR)
 	output:
 		output = expand("output/only_finemap_HRC_finemap/{{ss}}_only_finemap.{{snp}}.gz", snp = LD_UKB_ranges.index.tolist())
 	params:
 	 	chrom = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['CHR'],
 		pos = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['BP'],
 		start = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.left'],
 		end = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.right']
 	conda: "envs/polyfun.yml"
	resources: mem_mb = 32000
 	shell: 
 		"""
 		python polyfun/finemapper.py \
 		--geno /sc/arion/projects/psychgen/resources/genotype_ref_panel/HRC_fromBroad/chr1_22c/pop_EUR/HRC.r1-1.EGA.GRCh37.chr{params.chrom}.impute.plink.EUR \
 		--sumstats output/{wildcards.ss}/priors/{wildcards.ss}_l2-ldsc.{params.chrom}.snpvar_ridge_constrained.gz \
 		--n 101962 \
 		--chr {params.chrom} \
 		--start {params.start} \
 		--end {params.end} \
 		--method finemap \
		--finemap-exe /hpc/packages/minerva-centos7/finemap/1.4/finemap_v1.4_x86_64/finemap_v1.4_x86_64 \
		--non-funct \
 		--max-num-causal 5 \
 		--out {output.output} \
 		--allow-missing
		"""


rule merge_finemapping_jobs_onlyfinemap:
	input: expand("output/only_finemap_HRC_finemap/{{ss}}_only_finemap.{snp}.gz", snp = LD_UKB_ranges.index.tolist())
	output: "output/only_finemap_HRC_finemap/{ss}_only_finemap_all.txt.gz"
	conda: "envs/polyfun.yml"
	resources: mem_mb = 8000
	shell:  "cat {input} >> {output}"


rule run_only_susie:
 	input:
 	    snpvar = expand("output/{ss}/priors/{ss}_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", ss = SS, chr = CHR)
 	output:
 		output = expand("output/only_susie_HRC_finemap/{{ss}}_only_susie.{{snp}}.gz", snp = LD_UKB_ranges.index.tolist())
 	params:
 	 	chrom = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['CHR'],
 		pos = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['BP'],
 		start = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['locus_start'],
 		end = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['locus_end']
 	conda: "envs/polyfun.yml"
	resources: mem_mb = 32000
 	shell: 
 		"""
 		python polyfun/finemapper.py \
 		--geno /sc/arion/projects/psychgen/resources/genotype_ref_panel/HRC_fromBroad/chr1_22c/pop_EUR/HRC.r1-1.EGA.GRCh37.chr{params.chrom}.impute.plink.EUR \
 		--sumstats output/{wildcards.ss}/priors/{wildcards.ss}_l2-ldsc.{params.chrom}.snpvar_ridge_constrained.gz \
 		--n 101962 \
 		--chr {params.chrom} \
 		--start {params.start} \
 		--end {params.end} \
 		--method susie \
		--non-funct \
 		--max-num-causal 5 \
 		--out {output.output} \
 		--allow-missing
		"""

rule merge_finemapping_jobs_onlysusie:
	input: expand("output/only_susie_HRC_finemap/{{ss}}_only_susie.{snp}.gz", snp = LD_UKB_ranges.index.tolist())
	output: "output/only_susie_HRC_finemap/{ss}_only_susie_all.txt.gz"
	conda: "envs/polyfun.yml"
	resources: mem_mb = 8000
	shell:  "cat {input} >> {output}"
